services:
  redis:
    image: redis:latest
    command: redis-server --save "" --appendonly no
    ports:
      - ":6379"
    deploy:
      resources:
        limits:
          cpus: "0.05" # 0.1
          memory: "0.5GB"
    networks:
      - posttest
  postgres:
    image: postgres
    environment:
      - POSTGRES_PASSWORD=123
      - POSTGRES_DB=bun
    ports:
      - "5432:5432"
    deploy:
      resources:
        limits:
          cpus: '0.6' # 0.6
          memory: '1.5GB'
    networks:
      - posttest
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./postgresql.conf:/docker-entrypoint-initdb.d/postgresql.conf
    command: postgres -c config_file=/docker-entrypoint-initdb.d/postgresql.conf
  app1:
    image: leandro159/app:bun
    ports:
      - :80
    networks:
      - posttest
    restart: on-failure:10
    depends_on:
      - postgres
      - redis
    deploy:
      resources:
        limits:
          cpus: '0.3375' # 0.3
          memory: '0.6GB'
  app2:
    image: leandro159/app:bun
    ports:
      - :80
    networks:
      - posttest
    restart: on-failure:10
    depends_on:
      - postgres
      - redis
    deploy:
      resources:
        limits:
          cpus: '0.3375' # 03
          memory: '0.6GB'
  
  nginx:
    image: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    deploy:
      resources:
        limits:
          cpus: '0.175' # 0.2
          memory: '0.5GB'
    ports:
      - '9999:9999'
    networks:
      - posttest
    restart: on-failure:10
    depends_on:
      - app1
      - app2
networks:
  posttest:

version: '3.8'